name: Deploy to Cloud Run

on:
  push:
    branches:
      - main        # Deploy to production
      - staging     # Deploy to staging
  pull_request:
    branches:
      - main        # Test builds on PRs

env:
  PROJECT_ID: smartgoalapp-3a223
  REGION: us-west3

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
    
    - name: Configure Docker to use gcloud as credential helper
      run: gcloud auth configure-docker
    
    - name: Deploy to staging
      if: github.ref == 'refs/heads/staging'
      run: |
        gcloud run deploy smart-goal-app-staging \
          --source ./frontend \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --project ${{ env.PROJECT_ID }} \
          --build-arg REACT_APP_FIREBASE_API_KEY="${{ secrets.REACT_APP_FIREBASE_API_KEY }}" \
          --build-arg REACT_APP_FIREBASE_AUTH_DOMAIN="${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" \
          --build-arg REACT_APP_FIREBASE_PROJECT_ID="${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" \
          --build-arg REACT_APP_FIREBASE_STORAGE_BUCKET="${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" \
          --build-arg REACT_APP_FIREBASE_MESSAGING_SENDER_ID="${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" \
          --build-arg REACT_APP_FIREBASE_APP_ID="${{ secrets.REACT_APP_FIREBASE_APP_ID }}" \
          --build-arg REACT_APP_FIREBASE_MEASUREMENT_ID="${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}"
    
    - name: Deploy to production
      if: github.ref == 'refs/heads/main'
      env:
        REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
        REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
        REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
        REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
        REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
        REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
        REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}
      run: |
        gcloud run deploy smart-goal-app-service \
          --source ./frontend \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --project ${{ env.PROJECT_ID }} \
          --set-env-vars REACT_APP_FIREBASE_API_KEY="${REACT_APP_FIREBASE_API_KEY}",REACT_APP_FIREBASE_AUTH_DOMAIN="${REACT_APP_FIREBASE_AUTH_DOMAIN}",REACT_APP_FIREBASE_PROJECT_ID="${REACT_APP_FIREBASE_PROJECT_ID}",REACT_APP_FIREBASE_STORAGE_BUCKET="${REACT_APP_FIREBASE_STORAGE_BUCKET}",REACT_APP_FIREBASE_MESSAGING_SENDER_ID="${REACT_APP_FIREBASE_MESSAGING_SENDER_ID}",REACT_APP_FIREBASE_APP_ID="${REACT_APP_FIREBASE_APP_ID}",REACT_APP_FIREBASE_MEASUREMENT_ID="${REACT_APP_FIREBASE_MEASUREMENT_ID}"
    
    - name: Deploy backend
      run: |
        gcloud run deploy smart-goal-app-backend \
          --source ./backend \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --project ${{ env.PROJECT_ID }}
    
    - name: Test build only (for PRs)
      if: github.event_name == 'pull_request'
      run: |
        echo "Testing build for PR..."
        docker build -t test-build ./frontend
